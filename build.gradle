plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '2.7.15'
    id 'io.spring.dependency-management' version '1.1.5'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

apply plugin: "com.ewerk.gradle.plugins.querydsl"

java {
    sourceCompatibility = '11'
}

repositories {
    mavenCentral()
    // 아임포트 관련
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // 내장된 톰캣 서버 활용
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'

    // 외부 톰캣 서버 사용시 위 라이브러리 삭제 후 주석 해제
    // providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    // JSTL 라이브러리 추가, 3.0 이상이면 아래 3개의 의존성을 추가해야함.
    implementation 'jakarta.servlet:jakarta.servlet-api' //스프링부트 3.0 이상
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api' //스프링부트 3.0 이상
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl' //스프링부트 3.0 이상

    // JASPER - 톰캣에서 jsp 컴파일하는 엔진이 포함되어 있지 않기 때문에, jsp 파일 컴파일하기 위한 의존성 추가
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'

    // 자동 재시작, HTML, CSS, JS 파일 변경될 때 브라우저 자동 새로 고침 등의 기능 제공
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // 몽고 디비 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // 웹 소켓 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // not null 등 Validation 검사를 위해 사용
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // point 사용을 위한 라이브러리 추가
    implementation group: 'org.locationtech.jts', name: 'jts-core', version: '1.18.2'

    implementation 'org.hibernate:hibernate-spatial'

    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'net.nurigo:sdk:4.2.9'

    runtimeOnly 'com.mysql:mysql-connector-j'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // 아임포트 관련 //
    implementation group: 'com.github.iamport', name: 'iamport-rest-client-java', version: '0.2.22'
    implementation group: 'com.squareup.retrofit2', name: 'adapter-rxjava2', version: '2.9.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.3'
    implementation group: 'com.squareup.retrofit2', name: 'converter-gson', version: '2.3.0'

    //S3 의존성 추가
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // Querydsl 관련
    implementation "com.querydsl:querydsl-jpa"
    implementation 'com.querydsl:querydsl-sql'
    implementation 'com.querydsl:querydsl-sql-codegen'
    implementation 'com.querydsl:querydsl-apt'

    implementation "org.apache.commons:commons-lang3:3.12.0"
    implementation files('libs/cos.jar')
}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslDir]
        }
    }
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}